plugins {
    id 'application'
    id 'java'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.5.5'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'com.gorylenko.gradle-git-properties' version '2.5.3'
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'au.com.dius.pact' version '4.6.17'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.34'
    id 'org.sonarqube' version '6.3.1.5724'
    id 'uk.gov.hmcts.java' version '0.12.67'
    id 'project-report'
    id 'jacoco'
}

application {
    mainClass = 'uk.gov.hmcts.probate.OrchestratorApplication'
    group = 'uk.gov.hmcts.probate'
    version = "4.0.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

jacoco {
    toolVersion = '0.8.13'
}

sonar {
    properties {
        property "sonar.exclusions", "**uk/gov/hmcts/probate/appinsights/*, **/PaMapper.java, **/IntestacyMapper.java, " +
                "**/ScheduledConfiguration.java, **/AuthenticateUserResponse.java, **/TokenExchangeResponse.java, " +
                "**/FormDataMigrator.java, **/IdamUserEmail.java, **/IdamUsersCsvLoader.java, " +
                "**uk/gov/hmcts/probate/OrchestratorApplication.java"
        property "sonar.projectName", "PROBATE :: Probate-Orchestrator-Service"
        property "sonar.projectKey", "Probate-Orchestrator-Service"
        property "sonar.coverage.jacoco.xmlReportPaths", "${layout.buildDirectory.get()}/jacoco/test/html/jacocoTestReport.xml"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

test.finalizedBy jacocoTestReport

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

pitest {
    targetClasses = ['uk.gov.hmcts.probate.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
    timeoutConstInMillis = 30000
}

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    testFunctional {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
    testIntegration {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

processContractTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

processContractTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.register('integration', Test) {
    description = "Runs integration tests"
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
}

tasks.register('smoke', Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

tasks.register('functional', Test) {
    description = "Runs functional Tests"
    testClassesDirs = sourceSets.testFunctional.output.classesDirs
    classpath = sourceSets.testFunctional.runtimeClasspath
    finalizedBy aggregate
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

functional.finalizedBy(aggregate)
tasks.register('runProviderPactVerification', Test) {
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    if (project.hasProperty('pact.verifier.publishResults')) {
        systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
    }
    systemProperty 'pact.provider.version', project.pactVersion
}

tasks.register('runProviderPactTests', Test) {
    description = "Runs Provider Contract Tests"
    println 'runProviderPactTests-PACT_BROKER_FULL_URL=' + System.getenv("PACT_BROKER_FULL_URL")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

tasks.register('runConsumerPactTests', Test) {
    description = "Runs Contract Tests"
    println 'runProviderPactTests-PACT_BROKER_FULL_URL=' + System.getenv("PACT_BROKER_FULL_URL")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

tasks.withType(Test).configureEach {
    maxHeapSize = "1024m"
    useJUnitPlatform()
}

def versions = [
        authCheckerLib                  : '3.1.1',
        commonsBeanutils                : '1.11.0',
        commonsIO                       : '2.20.0',
        commonMark                      : '0.25.1',
        feign                           : '13.6',
        fortifyClient                   : '1.4.10',
        hmctsJavaLogging                : '6.1.9',
        jacksonDatabind                 : '2.20.0',
        junitJupiter                    : '5.12.2',
        lombok                          : '1.18.40',
        mapStruct                       : '1.3.0.Final',
        pact_version                    : '4.1.34',
        piTest                          : '1.20.3',
        probateCommonsVersion           : '2.2.12',
        restAssured                     : '5.5.6',
        serenity                        : '4.2.34',
        serviceAuthProviderClient       : '5.3.3',
        serviceTokenGenerator           : '0.6.0',
        springBootVersion               : '3.5.5',
        springCloudWiremock             : '4.3.0',
        springDocOpenUi                 : '2.8.13',
        swaggerAnnotations              : '2.2.37',
        springSecurityVersion           : '6.5.4',
        tomcat              : '11.0.11'
]

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${layout.buildDirectory.get()}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

check.dependsOn(integration)

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2025.0.0"
    }
}

configurations {
    smokeTestImplementation.extendsFrom testImplementation
    smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

ext['snakeyaml.version'] = '2.0'

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: versions.springBootVersion
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurityVersion
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.12'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jacksonDatabind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.20'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootVersion
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: versions.feign
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.5'
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.2.2'

    //Solves CVE-2025-48989
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: versions.tomcat
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: versions.tomcat
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: versions.tomcat

    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.hmctsJavaLogging
    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: versions.authCheckerLib
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceAuthProviderClient
    implementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommonsVersion
    implementation group: 'com.microsoft.azure', name: 'applicationinsights-core', version: '3.7.4'
    implementation group: 'com.microsoft.azure', name: 'applicationinsights-runtime-attach', version: '3.7.4'
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIO
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: versions.springDocOpenUi
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: versions.swaggerAnnotations
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind
    implementation group: 'org.pitest', name: 'pitest', version: versions.piTest
    implementation group: 'org.commonmark', name: 'commonmark', version: versions.commonMark
    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.15.0'
    implementation group: 'org.sonarsource.api.plugin', name: 'sonar-plugin-api', version: '13.2.0.3137'
    implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.1'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootVersion
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: versions.springCloudWiremock
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    testImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind
    testImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign
    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: versions.fortifyClient, classifier: 'all'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter

    testIntegrationImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testIntegrationImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityVersion
    testIntegrationImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootVersion
    testIntegrationImplementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: versions.springCloudWiremock
    testIntegrationImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testIntegrationImplementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
    testIntegrationImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    testIntegrationImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind
    testIntegrationImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign
    testIntegrationImplementation group: 'com.github.hmcts', name: 'fortify-client', version: versions.fortifyClient
    testIntegrationImplementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommonsVersion
    testIntegrationImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testIntegrationRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    testIntegrationImplementation sourceSets.main.runtimeClasspath
    testIntegrationImplementation sourceSets.test.runtimeClasspath

    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.13.0'
    testFunctionalImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testFunctionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    testFunctionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalImplementation sourceSets.main.runtimeClasspath
    testFunctionalImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath
    contractTestImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign

    constraints {
        checkstyle group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanutils
        implementation group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanutils
        testFunctionalImplementation group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanutils
        testIntegrationImplementation group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanutils
    }
}

configurations.configureEach {
    resolutionStrategy {
        eachDependency { details ->
            // Resolve CVE‑2025‑48976
            if (details.requested.name == 'commons-fileupload') {
                details.useVersion '1.6.0'
            }
        }
    }
}

tasks.register('fortifyScan', JavaExec) {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

tasks.register('runAndPublishConsumerPactTests', Test) {
    logger.lifecycle("Runs PublishConsumer pact tests")
    systemProperty 'pact.rootDir', "pacts"
    println 'runAndPublishConsumerPactTests-PACT_BROKER_FULL_URL=' + System.getenv("PACT_BROKER_FULL_URL")
    println 'runAndPublishConsumerPactTests-pact.rootDir=' + System.getenv("pact.rootDir")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

pact {
    println 'pact-PACT_BROKER_FULL_URL=' + System.getenv("PACT_BROKER_FULL_URL")
    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?:'http://localshost:80'
    }
    publish {
        pactDirectory = 'target/pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-parameters"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

bootJar {
    archiveFileName = 'probate-orchestrator-service.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

tasks.register('generateAatEnvFile') {
    doFirst {
        print 'Generating AAT env var file'
        "sh bin/generate-aat-env-file.sh".execute()

        // Sleep to allow secrets to be fetched:
        sleep(20 * 1000)
    }
}

run {
    if (new Boolean(System.getenv("POINT_TO_AAT"))) {
        print 'Exporting AAT env vars'
        doFirst {
            if (project.file('./.aat-env').exists()) {
                project.file('./.aat-env').readLines().each() {
                    def index = it.indexOf("=")
                    def key = it.substring(0, index)
                    def value = it.substring(index + 1)
                    environment key, value
                }
            }
        }
    }
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
}

rootProject.tasks.named("processResources") {
    dependsOn("generateGitProperties")
}

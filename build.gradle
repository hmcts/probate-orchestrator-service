buildscript {
    dependencies {
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '3.3'
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.5.8")
        classpath("net.serenity-bdd:serenity-single-page-report:2.5.8")
    }
}

plugins {
    id 'application'
    id 'pmd'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.5.4'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
    id 'info.solidsoft.pitest' version '1.6.0'
    id 'au.com.dius.pact' version '4.2.8'
    id 'uk.gov.hmcts.java' version '0.12.12'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'project-report'


gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/services/orchestrator")
    keys = ['git.commit.id', 'git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

group = 'uk.gov.hmcts.probate'
version = "4.0.0"
mainClassName = 'uk.gov.hmcts.probate.OrchestratorApplication'

sourceCompatibility = 11
targetCompatibility = 11

//check.dependsOn dependencyCheckAnalyze
// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}
jacoco {
    toolVersion = '0.8.5'
}

sonarqube {
    properties {
        property "sonar.exclusions", "**uk/gov/hmcts/probate/appinsights/*, **/PaMapper.java, **/IntestacyMapper.java, " +
                "**/ScheduledConfiguration.java, **/AuthenticateUserResponse.java, **/TokenExchangeResponse.java, " +
                "**/FormDataMigrator.java, **/IdamUserEmail.java, **/IdamUsersCsvLoader.java"
        property "sonar.projectName", "PROBATE :: Probate-Orchestrator-Service"
        property "sonar.projectKey", "Probate-Orchestrator-Service"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

test.finalizedBy jacocoTestReport

dependencyCheck {
    suppressionFile = 'dependency-check-suppressions.xml'
}

pitest {
    targetClasses = ['uk.gov.hmcts.probate.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
    timeoutConstInMillis = 30000
}

sonarqube {
    properties {
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    testFunctional {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }
    testContract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }

}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task functional(type: Test) {
    description = "Runs functional Tests"
    testClassesDirs = sourceSets.testFunctional.output.classesDirs
    classpath = sourceSets.testFunctional.runtimeClasspath
    finalizedBy aggregate
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

functional.finalizedBy(aggregate)

serenity {
    reports = ["single-page-html"]
}

task runProviderPactTests(type: Test) {
    description = "Runs Contract Tests"
    testClassesDirs = sourceSets.testContract.output.classesDirs
    classpath = sourceSets.testContract.runtimeClasspath
}

task runConsumerPactTests(type: Test) {
    description = "Runs Contract Tests"
    useJUnitPlatform()
    testClassesDirs = sourceSets.testContract.output.classesDirs
    classpath = sourceSets.testContract.runtimeClasspath
}

def versions = [
        commonsIO                       : '2.8.0',
        hmctsJavaLogging                : '5.1.7',
        restAssured                     : '3.0.3',
        serviceTokenGenerator           : '0.6.0',
        lombok                          : '1.18.20',
        springfoxSwagger                : '3.0.0',
        springCloudWiremock             : '3.0.3',
        springBootVersion               : '2.5.4',
        springSecurityVersion           : '5.5.1',
        mapStruct                       : '1.3.0.Final',
        authCheckerLib                  : '2.1.4',
        serenity                        : '2.5.8',
        jjwt                            : '0.9.0',
        serviceAuthProviderClient       : '4.0.0',
        restAssured                     : '4.4.0',
        piTest                          : '1.6.9',
        commonMark                      : '0.17.0',
        probateCommonsVersion           : '1.2.4',
        jacksonDatabind                 : '2.12.4',
        pact_version                    : '3.6.15',
        feign                           : '11.6',
        junitJupiter                    : '5.8.0-M1'
]

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}


pmd {
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/pmd")
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"
    }
    dependencies {
        //CVE-2020-26939
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.68'

        //CWE79
        dependency group: 'com.netflix.hystrix', name: 'hystrix-core', version: '1.5.18'

        //CVE-2020-15250
        dependency group: 'junit', name: 'junit', version: '4.13.2'
        
    }
}
processResources {
    from('src/lib/AI-Agent.xml') {
        into 'lib'
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.tomcat.embed']) {
                details.useVersion '9.0.50'
            }
            if (details.requested.group == 'org.gradle') {
                details.useVersion '1.4'
                details.because 'API breakage in higher versions'
            }
        }
    }
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: versions.springBootVersion
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootVersion
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: versions.feign

    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.hmctsJavaLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.hmctsJavaLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.hmctsJavaLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.hmctsJavaLogging
    implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: versions.authCheckerLib
    implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthProviderClient
    implementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommonsVersion
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIO
    
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: versions.springfoxSwagger
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind

    implementation group: 'org.pitest', name: 'pitest', version: versions.piTest
    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: versions.commonMark
    implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
    implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    compileOnly group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootVersion
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: versions.springCloudWiremock
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    testImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign
    testImplementation 'com.github.hmcts:fortify-client:1.2.1:all'

    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenity
    testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    testFunctionalImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testFunctionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    testFunctionalImplementation sourceSets.main.runtimeClasspath
    testFunctionalImplementation sourceSets.test.runtimeClasspath
    testFunctionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testContractImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign
    testContractImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testSmokeImplementation group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: versions.pact_version
    testContractImplementation group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: versions.pact_version
    testContractImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5_2.12', version: versions.pact_version
    testContractImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8_2.12', version: versions.pact_version
    testContractImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testContractRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    testContractImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    
    testContractImplementation sourceSets.main.runtimeClasspath
    testContractImplementation sourceSets.test.runtimeClasspath
    testContractImplementation group: 'io.github.openfeign', name: 'feign-core', version: versions.feign 
}

task printbranch {
    doLast {
        print project.pactBrokerTag
    }
}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

pact {
    publish {
        pactDirectory = 'target/pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

bootJar {
    archiveFileName = 'probate-orchestrator-service.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
}
